NAME := tetris
DIR_GAME := s21_BrickGame

CC := gcc
CFLAGS := -I inc -std=c11 -Wall -Werror -Wpedantic
GCOV_FLAGS = -fprofile-arcs -ftest-coverage
CHECK_LIBS = $(shell pkg-config --libs check) #-lcheck -lm -lpthread -lrt -lsubunit

OBJS_FSMSWITCHCASE :=  out/tetris.o out/fsm.o 
BACKEND := out/brick_game/tetris/
FRONTEND := out/gui/cli/
BACK := $(BACKEND)tetris_init.o $(BACKEND)tetris_moving.o $(BACKEND)tetris_score.o
FRONT := $(FRONTEND)tetris_frontend.o
#OBJS_FSMTABLE := out/tetris.o out/fsm_matrix.o  out/frontend.o


PATH_TEST = test
TEST = run_tests
DIR_INSTALL := ~/$(DIR_GAME)/

.PHONY: clean install tetris uninstall

all: clean install

install: mkdir tetris #clean - –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—á–∏—â–∞—Ç—å –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã –ø–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –∏–≥—Ä–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ 
ifdef DIR_INSTALL
	@if [ -d $(DIR_INSTALL) ]; then \
	  echo "\n ‚úÖ  TETRIS GAME install in catalog $(DIR_INSTALL) >>>" ;\
          install tetris $(DIR_INSTALL) ; 	\
          printf " üöÄ Running tetris game ? [Y/N] > " && read ans && if [ $${ans:-'N'} = 'y' ]; \
          then $(DIR_INSTALL)./tetris; fi \
	  else echo "\ninstall aborted ... " ; \
	       echo "$(DIR_INSTALL) >>> not found catalog" ; \
	fi	
else
	$(error DIR_INSTALL must be set!)
endif


uninstall: clean
	$(RM) $(DIR_INSTALL)tetris
	$(RM) $(DIR_INSTALL)tetris_max_score.txt

tetris: $(OBJS_FSMSWITCHCASE) $(BACK) $(FRONT)
	#clang-format -i src/*.c
	$(CC) $(CFLAGS) $^ -o $@ -lncurses

#frogger_fsmtable: $(OBJS_FSMTABLE)
#	$(CC) $(CFLAGS) $^ -o $@ -lncurses

out/%.o: src/%.c
	$(CC) $(CFLAGS) -c $< -o $@ 

mkdir:
	mkdir -p ~/$(DIR_GAME)
	mkdir -p $(BACKEND)
	mkdir -p $(FRONTEND)

clean:
	$(RM) out/*.o $(NAME)
	rm -rf out/
	rm -rf gcov/
	rm -rf *coverage.info
	rm -rf $(TEST)
	rm -rf test/*.gcov.*
	rm -rf tetris_max_score.txt



test_file:
	$(CC) $(CFLAGS) $(GCOV_FLAGS) -c test/test.c -o  test/tests.gcov.o

test: test_file
	$(CC) $(CFLAGS) $(GCOV_FLAGS) -o $(TEST) test/*.gcov.o $(BACKEND)*.o  $(CHECK_LIBS)
	@printf "\e[1;35;107m RUN FILE TESTING  \e[31;0m \n"
	./$(TEST)
	@printf "\n\e[1;35;107m END FILE TESTING    \e[31;0m \n"
	

gcov_report: test
	@printf "\e[1;35;107m  üìä –û—Ç—á–µ—Ç –ø–æ–∫—Ä—ã—Ç–∏—è –∫–æ–¥–∞ –≤ 'gcov/index.html' ‚îÉ\e[31;0m \n"
	lcov -t "gcov_report" -o $(NAME)_coverage.info -c -d . --exclude '/usr/*' --exclude  $(TEST)
	genhtml -o gcov $(NAME)_coverage.info
	
valgrind: tetris test
	valgrind --leak-check=full --track-origins=yes ./$(TEST) $(GTEST_LIB)

	
cppcheck:
	@printf "\n üîßüîßüîß CHECK FILE --enable=all --inconclusive \n" 
	#cppcheck -q --enable=all --inconclusive src/gui/cli/*.c src/*.c src/brick_game/tetris/*.c inc/*.h
	@printf "\n üîßüîßüîß CHECK FILE --enable=all --suppress=missingIncludeSystem \n"
	cppcheck --enable=all --suppress=missingIncludeSystem src/gui/cli/*.c src/*.c src/brick_game/tetris/*.c inc/*.h
	#cppcheck --enable=all --check-level=exhaustive --suppress=missingIncludeSystem src/gui/cli/*.c src/*.c src/brick_game/tetris/*.c inc/*.h
# --check-level=exhaustive >>> Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]





arch:
	mkdir $(ARCHDIR) $(ARCHDIR)/gui $(ARCHDIR)/brick_game
	cp -r $(LIBDIR) $(ARCHDIR)/$(LIBDIR) && cp -r $(GUIDIR) $(ARCHDIR)/$(GUIDIR) && cp -r $(HDIR) $(ARCHDIR) && cp -r $(INSTDIR) $(ARCHDIR) && cp Makefile $(ARCHDIR) && cp readme.txt $(ARCHDIR)
	tar -cvf willumye.tetris.tar.gz $(ARCHDIR)
	-rm -rf $(ARCHDIR)

dvi:
	mkdir -p dvi
	texi2dvi readme.texi --dvi -o readme.dvi
	mv readme.* dvi
	mv dvi/readme.txt .
	mv dvi/readme.texi .

# $^ —ç—Ç–æ –Ω–∞–±–æ—Ä –∑–∞–≤–∏—Å–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —á–µ–≥–æ-—Ç–æ –¥—Ä—É–≥–æ–≥–æ.
# $@ —ç—Ç–æ –∏–º—è —Ü–µ–ª–∏, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ø–æ—Å—Ç—Ä–æ–µ–Ω–∞.

# $(RM) - –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –≤ Makefile. –°—É—â–µ—Å—Ç–≤—É—é—Ç —è–≤–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ (–∫–æ—Ç–æ—Ä—ã–µ –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ Makefile) –∏ –Ω–µ—è–≤–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ (–æ–ø—Ä–µ–¥–µ–ª—è—é—Ç—Å—è make –∏ –º–æ–≥—É—Ç –±—ã—Ç—å –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –≤–∞–º–∏)
# –í—ã –º–æ–∂–µ—Ç–µ —É–≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫ –Ω–µ—è–≤–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å —ç—Ç–∏–º —Ñ–ª–∞–≥–æ–º: make -p
# –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–∑ –Ω–∞–∏–±–æ–ª–µ–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –ø–æ –∞–¥—Ä–µ—Å—É: 10.3 –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –Ω–µ—è–≤–Ω—ã–º–∏ –ø—Ä–∞–≤–∏–ª–∞–º–∏
# –í—ã –º–æ–∂–µ—Ç–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å –ø–æ–º–æ—â—å—é —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ $(NAME) –∏–ª–∏ ${NAME}

