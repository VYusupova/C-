\input texinfo
@documentencoding UTF-8

@ifnottex
@paragraphindent 0
@end ifnottex

@node Top
@top Tetris BrickGame v1.0

@menu
* Introduction::
* Installation::
* Usage::
* Testing::
* Files::
* Makefile Targets::
@end menu

@node Introduction
@section Introduction

Tetris BrickGame v1.0 is a simple implementation of the classic Tetris game. It is built using C and ncurses for the terminal interface.

@node Installation
@section Installation

To install the game:

@enumerate
@item
Type @code{make install} in the project directory.
@item
You will be prompted to specify an installation directory. If you do not specify a directory, the game will be installed to the @file{./build} directory by default.
@end enumerate

To uninstall the game:

@enumerate
@item
Type @code{make uninstall} in the project directory.
@end enumerate

@node Usage
@section Usage

To run the game:

@enumerate
@item
After installing, navigate to the installation directory and run the @file{tetris.bin} executable.
@end enumerate

Game controls:

@itemize
@item
@strong{Left Arrow}: Move the tetromino left.
@item
@strong{Right Arrow}: Move the tetromino right.
@item
@strong{Down Arrow}: Accelerate the fall of the tetromino.
@item
@strong{Up Arrow}: Rotate the tetromino.
@item
@strong{Spacebar}: Hard drop (immediately drop the tetromino to the bottom).
@item
@strong{P}: Pause the game.
@item
@strong{Esc}: End the game.
@end itemize

@node Testing
@section Testing

To compile and run the tests:

@enumerate
@item
Type @code{make test} in the project directory.
@end enumerate

This will execute the test suite using the @code{check} library.  Code coverage reports can be generated using the @code{make gcov_report} command.

@node Files
@section Files

The project structure is as follows:

@itemize
@item
@file{brick_game/tetris/}: Contains the core game logic source files.
@item
@file{gui/cli/}: Contains the command-line interface and savegame-related source files.
@item
@file{inc/}: Contains header files.
@item
@file{tests/}: Contains test files.
@item
@file{Makefile}: The build configuration file.
@item
@file{readme.txt}: A brief description of the project.
@item
@file{readme.texi}: The Texinfo source file for this documentation.
@end itemize

@node Makefile Targets
@section Makefile Targets

The following @code{make} targets are available:

@itemize
@item
@code{all}: Builds and installs the game.
@item
@code{install}: Installs the game to the specified directory (defaults to @file{./build}).
@item
@code{uninstall}: Removes the installed game files.
@item
@code{build}: Builds the game executable.
@item
@code{libs}: Builds the static library.
@item
@code{test}: Runs the test suite.
@item
@code{gcov_report}: Generates a code coverage report.
@item
@code{clean}: Removes build artifacts.
@item
@code{dist}: Creates a distribution archive.
@item
@code{clang_i}: Formats code in-place using clang-format.
@item
@code{clang_n}: Checks code formatting using clang-format.
@item
@code{valgrind}: Runs tests with Valgrind.
@end itemize

@bye


 /\_/\
( o.o )
 > ^ <

